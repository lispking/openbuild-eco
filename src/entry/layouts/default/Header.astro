---
import { getRelativeLocaleUrl } from 'astro:i18n';

import type { SupportedLocale, NavKey } from '@/types';
import { I18N_CONFIG } from '@/constants/config';
import { Divider } from '@/components/react';

import BrandLogo from './BrandLogo.astro';
import HeaderLink from './HeaderLink.astro';
import LocaleSelector from './LocaleSelector';

interface Props {
  style?: string;
  hideNavs?: boolean;
}

type SiteNav = {
  key: NavKey;
  path: string;
}

const { style, hideNavs = false } = Astro.props;
const { pathname } = Astro.url;
const locale = (Astro.currentLocale || 'en') as SupportedLocale;
const i18n = I18N_CONFIG[locale];
const getLocaleUrl = getRelativeLocaleUrl.bind(null, locale);

const navs: SiteNav[] = [
  { key: 'projects', path: '/projects' },
  { key: 'guides', path: '/guides' },
];
---

<header class="flex items-center m-0 px-5 bg-white shadow-md" style={style}>
  <nav class="max-w-screen-xl my-0 mx-auto flex grow items-center justify-between">
    <BrandLogo />
    <div class="flex items-center gap-3">
      <div class="internal-links">
        {hideNavs !== true && (
          <>
            {navs.map(nav => (
              <HeaderLink href={getLocaleUrl(nav.path)}>{i18n.navs[nav.key]}</HeaderLink>
            ))}
          </>
        )}
      </div>
      <Divider className="h-6" orientation="vertical" client:visible />
      <LocaleSelector pathname={pathname} client:visible />
    </div>
  </nav>
</header>
<style>
  .internal-links a {
    padding: 1em 0.5em;
    color: var(--black);
    border-bottom: 4px solid transparent;
    text-decoration: none;
  }
  .internal-links a.active {
    text-decoration: none;
    border-bottom-color: var(--accent);
  }
</style>
